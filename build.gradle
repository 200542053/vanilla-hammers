plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = project.modid
version = project.version + "-" + project.minecraft_version

minecraft {
}

repositories {
    jcenter()

    maven { url = "https://maven.fabricmc.net/" }
    maven { url = 'https://jitpack.io' }
    maven { url "http://server.bbkr.space:8081/artifactory/libs-release" }
    maven { url "https://maven.shedaniel.me/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_version}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
    modCompile "net.fabricmc.fabric-api:fabric-api:${project.api_version}"

    // Magna (https://github.com/Draylar/magna) for hammers
    include "com.github.Draylar:magna:${project.magna_version}"
    modImplementation ("com.github.Draylar:magna:${project.magna_version}") {
        exclude group: "net.fabricmc"
        exclude group: "com.jamieswhiteshirt"
        exclude group: "me.shedaniel.cloth"
    }

    // LibCD (https://github.com/CottonMC/LibCD) for conditional recipes and advancements
    include 'io.github.cottonmc:LibCD:3.0.3+1.16.3'
    modImplementation ('io.github.cottonmc:LibCD:3.0.3+1.16.3') {
        exclude group: "net.fabricmc"
    }

    // dev modmenu
    modCompile "io.github.prospector:modmenu:${project.mod_menu_version}"

    // Static Content (https://github.com/Draylar/static-content) for hammer loading and compat
    include 'com.github.Draylar:static-content:1.0.1'
    modImplementation ('com.github.Draylar:static-content:1.0.1' ) {
        exclude group: "net.fabricmc"
    }

    // JIJ Maybe Data (https://github.com/Draylar/maybe-data) for optional recipes
    modImplementation 'com.github.Draylar:maybe-data:master-SNAPSHOT'
    include 'com.github.Draylar:maybe-data:master-SNAPSHOT'

    // Cloth/AutoConfig
    modApi("me.shedaniel.cloth:cloth-config-fabric:4.11.14") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}